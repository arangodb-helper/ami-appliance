---
- hosts: all
  become_method: sudo
  become: yes

  vars:
    mount_dir: /vol/data

  tasks:
    - name: apt update
      apt:  update_cache=yes upgrade=full

    - name: install libgmp10 (2)
      apt: name=libgmp10

    - name: install aws cloudwatch agent (1)
      command: wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py

    - name: install aws cloudwatch agent (2)
      copy:
        content: "[general]
          \nstate_file = /var/awslogs/state/agent-state
          \n
          \n[/var/log/syslog]
          \nfile = /var/log/syslog
          \nlog_group_name=/aws/ec2/syslog
          \nlog_stream_name={instance_id}
          \ndatetime_format = %b %d %H:%M:%S
          \ninitial_position = start_of_file
          \n
          \n[/var/log/arangodb3]
          \nfile = /var/log/arangodb3/arangod.log
          \nlog_group_name=/aws/ec2/arangodb3
          \nlog_stream_name={instance_id}
          \ndatetime_format = %b %d %H:%M:%S
          \ninitial_position = start_of_file
          "
        dest: /tmp/cw-agent.config

    - name: install aws cloudwatch agent (3)
      command: python awslogs-agent-setup.py -n -r us-east-1 -c /tmp/cw-agent.config

    - name: install aws cloudwatch agent (4)
      copy:
        content: "[default]
          \naws_access_key_id={{aws_access_key_id}}
          \naws_secret_access_key={{aws_secret_access_key}}
          \nregion=us-east-1
          \n[plugins]
          \ncwlogs = cwlogs"
        dest: /var/awslogs/etc/aws.conf

    - name: install aws cloudwatch agent (5)
      command: service awslogs restart

    - name: install python-pycurl
      apt: name=python-pycurl

    - name: install cloud-utils
      apt: name=cloud-utils

    - name: format new volume
      filesystem: fstype=ext4 dev=/dev/xvde

    - name: edit fstab and mount the vol
      action: mount name={{mount_dir}} src=/dev/xvde opts=noatime fstype=ext4 state=mounted

    - name: add arangodb key
      apt_key:
        url=https://download.arangodb.com/{{arangodb_repo}}/DEBIAN/Release.key
        state=present
        validate_certs=no

    - name: add arangodb repo
      apt_repository:
        repo='deb https://download.arangodb.com/{{arangodb_repo}}/DEBIAN /'
        state=present

    - name: install arangodb
      apt: name={{arangodb_name}}={{arangodb_version}} update_cache=yes

    - name: create a local arangod config file
      template: src=templates/{{arangodb_name}}/arangod.conf.local.j2 dest=/etc/{{arangodb_name}}/arangod.conf.local

    - name: create a local arangosh config file
      template: src=templates/{{arangodb_name}}/arangosh.conf.local.j2 dest=/etc/{{arangodb_name}}/arangosh.conf.local

    - name: ensure arangodb is running
      service: name={{arangodb_name}} state=stopped

    - name: patch startup script to use arangodb user
      lineinfile:
        dest=/lib/systemd/system/{{arangodb_name}}.service
        insertafter="^Type=simple"
        regexp="^Type=simple"
        line="Type=Simple\nUser=arangodb\nPermissionsStartOnly=true\n"
        state=present

    - name: patch startup script to use default password
      lineinfile:
        dest=/lib/systemd/system/{{arangodb_name}}.service
        insertafter="^ExecStartPre=/usr/bin/env chmod 700 /var/lib/arangodb3-apps"
        regexp="^ExecStartPre=/usr/bin/env chmod 700 /var/lib/arangodb3-apps"
        line="ExecStartPre=/usr/bin/env chmod 700 /var/lib/arangodb3-apps\nExecStartPre=/bin/bash -c \"/bin/systemctl set-environment ARANGODB_DEFAULT_ROOT_PASSWORD=$( ec2metadata --instance-id )\"\n"
        state=present

    - name: create arangodb final standalone folder
      file: path={{mount_dir}}/standalone state=directory owner=arangodb group=arangodb

    - name: Remove authorized keys from user ubuntu
      command: rm /home/ubuntu/.ssh/authorized_keys

    - name: Remove authorized keys from user root
      command: rm /root/.ssh/authorized_keys

    - name: remove cache files and logs
      command: rm -f /var/cache/apt/archives/*deb /var/log/*
