---
- hosts: all
  become_method: sudo
  become: yes

  vars:
    mount_dir: /vol/data

  tasks:
    - name: apt update
      apt:  update_cache=yes upgrade=full

    - name: install libgmp10 (2)
      apt: name=libgmp10

    - name: install aws cloudwatch agent (1)
      command: wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py

    - name: install aws cloudwatch agent (2)
      copy:
        content: "[general]\n
          state_file = /var/awslogs/state/agent-state\n

          [/var/log/syslog]\n
          file = /var/log/syslog\n
          log_stream_name = /aws/ec2/syslog\n
          log_group_name = {instance_id}\n
          datetime_format = %b %d %H:%M:%S\n
          initial_position = start_of_file\n
          \n
          [/var/log/arangodb3]\n
          datetime_format = %b %d %H:%M:%S\n
          file = /var/log/arangodb3/arangod.log\n
          buffer_duration = 5000\n
          log_stream_name = {instance_id}\n
          initial_position = start_of_file\n
          log_group_name = /aws/ec2/arangodb3\n
          "
        dest: /tmp/cw-agent.config

    - name: install aws cloudwatch agent (3)
      command: python awslogs-agent-setup.py -n -r us-east-1 -c /tmp/cw-agent.config

    - name: install aws cloudwatch agent (4)
      copy:
        content: "[default]\n
          aws_access_key_id = {{aws_access_key_id}}\n
          aws_secret_access_key = {{aws_secret_access_key}}\n
          region = us-east-1\n
          [plugins]\n
          cwlogs = cwlogs"
        dest: /var/awslogs/etc/aws.conf

    - name: install aws cloudwatch agent (5)
      command: service awslogs restart

    - name: install python-pycurl
      apt: name=python-pycurl

    - name: install cloud-utils
      apt: name=cloud-utils

    - name: format new volume
      filesystem: fstype=ext4 dev=/dev/xvde

    - name: edit fstab and mount the vol
      action: mount name={{mount_dir}} src=/dev/xvde opts=noatime fstype=ext4 state=mounted

    - name: add arangodb key
      apt_key:
        url=https://download.arangodb.com/{{arangodb_repo}}/DEBIAN/Release.key
        state=present
        validate_certs=no

    - name: add arangodb repo
      apt_repository:
        repo='deb https://download.arangodb.com/{{arangodb_repo}}/DEBIAN /'
        state=present

    - name: install arangodb
      apt: name={{arangodb_name}}={{arangodb_version}} update_cache=yes

    - name: create a local arangod config file
      template: src=templates/{{arangodb_name}}/arangod.conf.local.j2 dest=/etc/{{arangodb_name}}/arangod.conf.local

    - name: create a local arangosh config file
      template: src=templates/{{arangodb_name}}/arangosh.conf.local.j2 dest=/etc/{{arangodb_name}}/arangosh.conf.local

    - name: ensure arangodb is running
      service: name={{arangodb_name}} state=stopped

    - name: patch startup script to use default password
      lineinfile:
        dest=/etc/init.d/{{arangodb_name}}
        insertafter="^PIDFILE="
        regexp="^export ARANGODB_DEFAULT_ROOT_PASSWORD="
        line="export ARANGODB_DEFAULT_ROOT_PASSWORD=$(ec2metadata --instance-id)"
        state=present

    # cannot use replace (avaiable from 1.6 onwards only)
    - name: patch startup script
      shell: sed -e 's:-c \$CONF::' < /etc/init.d/{{arangodb_name}} > /etc/init.d/{{arangodb_name}}.new && mv /etc/init.d/{{arangodb_name}}.new /etc/init.d/{{arangodb_name}} && chmod 755 /etc/init.d/{{arangodb_name}}

    - name: create arangodb final standalone folder
      file: path={{mount_dir}}/standalone state=directory owner=arangodb group=arangodb

    - name: Remove authorized keys from user ubuntu
      command: rm /home/ubuntu/.ssh/authorized_keys

    - name: Remove authorized keys from user root
      command: rm /root/.ssh/authorized_keys

    - name: remove cache files and logs
      command: rm -f /var/cache/apt/archives/*deb /var/log/*
